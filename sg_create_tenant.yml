---
- hosts: localhost
  collections:
    - netapp.storagegrid
  gather_facts: false
  remote_user: root

  # variables
  vars:
    tenant_username: root
    full_tenant_name: "{{ env }}-{{ tenant_name }}"
    owner_ad_group: "{{ owner_ad_group }}"
    storagegrid_url: "{{ storagegrid_base_url }}"
    tenant_password: "{{ tenant_password }}"

  tasks:
  - name: Get StorageGrid admin auth token
    ansible.builtin.uri:
      url: "{{ storagegrid_url }}/api/v3/authorize"
      method: POST
      body: {
        "username": "{{ sg_username }}",
        "password": "{{ sg_password }}",
        "cookie": false,
        "csrfToken": false
      }
      body_format: json
      validate_certs: false
    register: auth
    no_log: false
  
  - name: Get existing tenant list
    ansible.builtin.uri:
      url: "{{ storagegrid_url }}/api/v3/grid/accounts?limit=1000"
      headers:
        Authorization: "{{ auth.json.data }}"
      method: GET
      body_format: json
      validate_certs: false
    register: acctchk
  - debug:
      msg: "Existing tenants: {{ acctchk }}"
  
  - name: Check if tenant account already exists
    set_fact: 
      acctexist: true
    set_fact:
      tenant_id: "{{ item.id }}"
    when: item.name == {{ full_tenant_name }}
    with_items: "{{ acctchk.json.data }}"
  - debug:
      msg: "check tenant processed, tenant_id: {{ tenant_id }}, acctexist: {{ acctexist }}"

  - name: Create tenant account
    ansible.builtin.uri:
      url: "{{ storagegrid_url }}/api/v3/grid/accounts"
      headers:
        Authorization: "{{ auth.json.data }}"
      method: POST
      body: {
        "name": "{{ full_tenant_name }}",
        "description": "my tenant description",
        "capabilities" : [ 
          "management", 
          "s3" 
        ],
        "policy": {
          "useAccountIdentitySource": false,
          "allowPlatformServices": false
        },
        "password": "{{ tenant_password }}",
        "grantRootAccessToGroup": "federated-group/Domain Admins"
      }
      status_code: 201
      body_format: json
      validate_certs: false
    no_log: false
    register: acctnew
    when: acctexist is undefined
  - debug:
      msg: "{{ acctnew }}"

  - name: Get the tenant ID just created
    set_fact:
      tenant_id: "{{ acctnew.json.data.id }}"
    when: tenant_id is undefined
  - debug:
      msg: "Created tenant: {{ tenant_id }}"

  - name: Authenticate to the tenant ID just created
    ansible.builtin.uri:
      url: "{{ storagegrid_url }}/api/v3/authorize"
      method: POST
      body: {
        "username": "{{ tenant_username }}",
        "password": "{{ tenant_password }}",
        "accountId": "{{ tenant_id }}",
        "cookie": false,
        "csrfToken": false
      }
      body_format: json
      validate_certs: false
    register: tenant_auth
    no_log: false

  
  - name: Create the delegated admin group on the tenant
    netapp.storagegrid.na_sg_org_group:
      api_url: "{{ storagegrid_url }}"
      auth_token: "{{ tenant_auth.json.data }}"
      validate_certs: false
      state: present
      unique_name: "federated-group/{{ owner_ad_group }}"
      management_policy:
        manage_all_containers: true
        manage_endpoints: true
        manage_own_s3_credentials: true
        root_access: false
    no_log: false
    register: tenant_admin_group_add
    retries: 40  # 10 min with 40 retries at 15 sec intervals 
    delay: 15
    until: tenant_admin_group_add is not failed
