---
- hosts: localhost
  collections:
    - netapp.storagegrid
  gather_facts: false
  remote_user: root

  # variables
  vars:
    tenant_username: root
    full_tenant_name: "{{ env }}-{{ tenant_name }}"
    owner_ad_group: "{{ owner_ad_group }}"
    storagegrid_url: "{{ storagegrid_base_url }}"
    tenant_password: "{{ tenant_password }}"

  tasks:
  - name: Get StorageGrid admin auth token
    ansible.builtin.uri:
      url: "{{ storagegrid_url }}/api/v3/authorize"
      method: POST
      body: {
        "username": "{{ sg_username }}",
        "password": "{{ sg_password }}",
        "cookie": false,
        "csrfToken": false
      }
      body_format: json
      validate_certs: false
    register: auth
    no_log: false
  - debug:
      msg: "{{ auth }}"
  
  - name: Get existing tenant list
    ansible.builtin.uri:
      url: "{{ storagegrid_url }}/api/v3/grid/accounts?limit=1000"
      headers:
        Authorization: "{{ auth.json.data }}"
      method: GET
      body_format: json
      validate_certs: false
    register: acctchk
  - debug:
      msg: "{{ acctchk }}"
  
  - name: Check if tenant account already exists
    set_fact: acctexist=true
    when: item.name==full_tenant_name
    with_items: "{{ acctchk.json.data }}"

  - name: Create tenant account
    netapp.storagegrid.na_sg_grid_account:
      api_url: "{{ storagegrid_url }}"
      auth_token: "{{ auth.json.data }}"
      validate_certs: false
      state: present
      name: "{{ full_tenant_name }}"
      protocol: s3
      management: true
      use_own_identity_source: false
      allow_platform_services: false
      password: "{{ tenant_password }}"
      root_access_group: "federated-group/Domain Admins"
    no_log: false
    register: acctnew
    when: acctexist is undefined

  - name: Get the tenant ID just created
    set_fact:
      tenant_id: "{{ acctnew | json_query('resp.id') }}"
  - debug:
      msg: "{{ tenant_id }}"

  - name: Authenticate to the tenant ID just created
    ansible.builtin.uri:
      url: "{{ storagegrid_url }}/api/v3/authorize"
      method: POST
      body: {
        "username": "{{ tenant_username }}",
        "password": "{{ tenant_password }}",
        "accountId": "{{ tenant_id }}",
        "cookie": false,
        "csrfToken": false
      }
      body_format: json
      validate_certs: false
    register: tenant_auth
    no_log: false
  - debug:
      msg: "{{ tenant_auth }}"
  

